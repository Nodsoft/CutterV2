@using System.Reflection
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using OpenIddict.Client.WebIntegration
@inject AuthenticationStateProvider AuthenticationStateProvider

<nav id="sidebar" class="collapsed" aria-label="sidebar">
    <div class="navbar-brand">
        <div class="d-flex gap-3 align-items-center flex-grow-1">
            <a href="">NSYS Cutter</a>
            <span class="version badge-transparent small">@Version</span>
        </div>

        <button type="button" class="sidebar-toggler">
            <span aria-hidden="true" class="sidebar-toggler-icon" onclick="document.getElementById('sidebar').classList.toggle('collapsed')"></span>
        </button>
    </div>

    <div role="presentation" class="sidenav" aria-label="Vault navigation">
        <div id="" class="nav-category" role="group" aria-label="root" aria-expanded="true">
            <NavLink class="nav-item nav-link" href="" Match="NavLinkMatch.All">
                <i class="bi bi-house-fill me-3" aria-hidden="true"></i>
                <label>Home</label>
            </NavLink>
        </div>
    </div>

    <div role="presentation" class="sidenav-bottom" aria-label="Vault navigation">
        @if (_user is not null)
        {
            <div class="nav-category" role="group" aria-label="auth" aria-expanded="true">
                <div class="nav-title d-flex gap-3 align-items-center" style="padding-inline-start: 0.5rem">
                    <img src="@_user.Claims.FirstOrDefault(c => c.Type is "avatar_url")?.Value" alt="avatar" class="img-fluid rounded-circle" height="32" width="32" />
                    <label>@_user.Claims.FirstOrDefault(c => c.Type is ClaimTypes.Name)?.Value</label>
                </div>
                
                <NavLink class="nav-item nav-link" href="profile" Match="NavLinkMatch.All">
                    <i class="bi bi-person-fill me-3" aria-hidden="true"></i>
                    <label>Profile</label>
                </NavLink>
                
                <NavLink class="nav-item nav-link" href="logout" Match="NavLinkMatch.All">
                    <i class="bi bi-door-closed-fill me-3" aria-hidden="true"></i>
                    <label>Logout</label>
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-category" role="group" aria-label="auth" aria-expanded="true">
                <NavLink class="nav-item nav-link" href="challenge" Match="NavLinkMatch.All">
                    <i class="bi bi-github me-3" aria-hidden="true"></i>Login
                </NavLink>
            </div>
        }
    </div>

    <footer role="contentinfo" aria-label="footer">
        <hr aria-hidden="true" style="opacity: 0.2; margin-bottom: 2rem;" />
        
        <ul aria-label="links">
            <li><a target="_blank" rel="external" href="https://github.com/Nodsoft/MoltenObsidian">GitHub</a></li>
            <li><a target="_blank" rel="external" href="https://www.nuget.org/packages/Nodsoft.MoltenObsidian">NuGet</a></li>
        </ul>

        <small aria-description="copyright">© 2022-2024 Nodsoft Systems, ISC License</small>
    </footer>
</nav>

@code {
    
    public static string Version => $"{typeof(Program).Assembly.GetCustomAttribute<AssemblyInformationalVersionAttribute>()!.InformationalVersion.Split('+')[0]}";
    
    private ClaimsPrincipal? _user;
    
    
    protected override async Task OnParametersSetAsync()
    {
        if (await AuthenticationStateProvider.GetAuthenticationStateAsync() is { User: { Identity.IsAuthenticated: true } user})
        {
            _user = user;
        }
    }

}