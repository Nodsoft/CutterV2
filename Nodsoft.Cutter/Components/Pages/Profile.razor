@page "/Profile"
@using System.Security.Claims
@using Microsoft.EntityFrameworkCore
@attribute [Authorize]
@rendermode InteractiveServer


@inject LinksService LinksService

<PageTitle>Profile</PageTitle>
<h1>Profile</h1>

<h2>My Links</h2>

@* Links table *@
<LinksTable SelfLinksOnly Links="@_links" />


@code {
    private Link[] _links = [];

    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }
    
    protected override async Task OnParametersSetAsync()
    {
        // Get Auth
        ClaimsPrincipal user = (await (AuthenticationState ?? throw new InvalidOperationException("AuthenticationState is null."))).User;
        uint uid = uint.Parse(user.FindFirstValue(ClaimTypes.NameIdentifier) ?? throw new InvalidOperationException("User ID not found."));
        
        _links = await LinksService.GetLinks().Where(l => l.CreatedBy.Id == uid).ToArrayAsync();
    }


}